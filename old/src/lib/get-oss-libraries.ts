import { readJSON } from "fs-extra";
import cleanObject from "./clean-object";

export interface OSSLibrary {
  readonly id: string;
  readonly name: string;
  readonly npm: string;
  readonly version?: string;
  readonly license?: string;
  readonly licenseText?: string;
}

interface RawOSSLibrary {
  readonly name: string;
  readonly version: string | null;
  readonly license: string | null;
  readonly licenseText: string | null;
}

/**
 * @param licensesFile - file generated by the `license-webpack-plugin` package (See `next.config.js`)
 */
const getOSSLibraries = async ({
  licensesFile,
}: {
  licensesFile: string;
}): Promise<OSSLibrary[]> => {
  const rawLibraries: RawOSSLibrary[] = await readJSON(licensesFile);
  const ossLibraries = rawLibraries
    .map(({ name, version, license, licenseText }) => {
      return {
        id: `${name}@${version}`,
        name,
        npm: `https://www.npmjs.com/package/${name}`,
        version: version ?? undefined,
        license: license ?? undefined,
        licenseText: licenseText ?? undefined,
      };
    })
    .sort((a, b) => a.name.localeCompare(b.name));
  return cleanObject(ossLibraries);
};

export default getOSSLibraries;
